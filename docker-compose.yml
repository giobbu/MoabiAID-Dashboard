version: "3.7"

volumes:
  dbbackups:
  postgis-data:

services:
  postgres:
    image: kartoza/postgis:11.0-2.5
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis,mobiaid
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the three specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,ogr_fdw
    ports:
      - 5434:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"
    networks: 
      - mobi

  dbbackups:
    image: kartoza/pg-backup:11.0
    hostname: pg-backups
    volumes:
      - dbbackups:/backups
    links:
      - postgres
    environment:
      - DUMPPREFIX=demo
      - PGUSER=docker
      - PGPASSWORD=docker
      - PGDATABASE=gis
      - PGPORT=5432
      - PGHOST=db
    restart: on-failure
    depends_on:
      - postgres
    networks: 
      - mobi
  
  streaming:
    image: streaming
    build: 
      # Important: two options: clone the bolow repo and put path to dockerfile as context. or replace the token (after oauth2:) with your own gitlab token
      #context: https://oauth2:YdMukyhbGUZYCdoYUn9R@gitlab.com/giobbu/large_scale_mobility_analysis.git#master:streaming_docker 
      context: /mnt/data/Shared_Documents/MLG/large_scale_mobility_analysis/streaming_docker/
    # command: ["/bin/bash", "startup_script.sh"] #TODO: This script starts kafka, There should be a cleaner more docker-style way
    privileged: true
    stdin_open: true
    tty: true
    ports:
      - 9092:9092 #Port for the Kafka bootstrap server
      - 8888:8888 #Port for Jupyter 
      - 4040:4050 # SparkUI
    volumes:
      - /mnt/data/Shared_Documents/MLG/large_scale_mobility_analysis:/home/guest/host
    networks: 
      - mobi
    depends_on: 
      - postgres
    # environment: 
      # - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://0.0.0.0:9092

  mobiaid:
    image: mobiaid:latest
    build: .
    command: wait-for-it postgres:5432 -- python manage.py runserver_plus 0.0.0.0:3000 # NOTE: This should be replaced with a more general startup script in production 
    volumes:
      - .:/app
      - /mnt/data/Shared_Documents/MLG/large_scale_mobility_analysis/streaming_docker/streaming:/streaming_files
      - /mnt/data/Shared_Documents/MLG/Belgium_map_data_20_12_19:/map_data
      - /mnt/data/Shared_Documents/MLG/mobi_media:/media
    ports:
      - "3000:3000"
      - 5678:5678 # Debugger
    depends_on:
      - postgres
      - streaming
    networks: 
      - mobi

  

networks: 
  mobi:
